input {
  jdbc {
    jdbc_driver_library => "C:/github/SimplePython/chap12/section01/simpledms/ojdbc11.jar"   # 오라클 JDBC 드라이버 경로
    jdbc_driver_class => "Java::oracle.jdbc.driver.OracleDriver"
    jdbc_connection_string => "jdbc:oracle:thin:@localhost:1521:xe"
    jdbc_user => "scott"
    jdbc_password => "!Ds1234567890"
    # 부서 데이터
    statement => "select 'dept_'||dno as id, 'dept' as type, dname as name, loc from tb_dept"
    schedule => "* * * * *"   # 3분마다 실행
  }
  jdbc {
    jdbc_driver_library => "C:/github/SimplePython/chap12/section01/simpledms/ojdbc11.jar"   # 오라클 JDBC 드라이버 경로
    jdbc_driver_class => "Java::oracle.jdbc.driver.OracleDriver"
    jdbc_connection_string => "jdbc:oracle:thin:@localhost:1521:xe"
    jdbc_user => "scott"
    jdbc_password => "!Ds1234567890"
    # 사원 데이터
    statement => "select 'emp_'||eno as id, 'emp' as type, ename as name, job from tb_emp"
    schedule => "* * * * *"   # 3분마다 실행
  }
}

filter {
  # 대소문자 매핑
  # 불필요한 필드 제거
  mutate {
    rename => {
      "ID"               => "id"
      "TYPE"             => "type"
      "NAME"             => "name"
      "LOC"              => "loc"
      "JOB"              => "job"      
    }
    remove_field => ["@version", "@timestamp"]
  }
}

# TODO: 기존 데이터는 유지하면서 id가 같은 데이터는 교체, 새로운 id는 추가
output {
  elasticsearch {
    hosts => ["http://localhost:9200"]
    index => "search-all"
    document_id => "%{id}"              # 고유 ID로
  }
  stdout { codec => json_lines }
}
